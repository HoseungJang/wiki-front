{"version":3,"sources":["contexts/Theme.tsx","constants/color.ts","components/Layout/Page.tsx","ScrollToTop.tsx","pages/NotFound/index.tsx","pages/Document/Navigation.tsx","components/Markdown/renderers/AnchorBlock.tsx","services/github.ts","components/Markdown/renderers/ImageBlock.tsx","components/Markdown/renderers/CodeBlock.tsx","components/Markdown/renderers/TableBlock.tsx","components/Markdown/index.tsx","hooks/useMarkdown.ts","pages/Document/Main.tsx","pages/Document/Sub.tsx","pages/Document/index.tsx","index.tsx"],"names":["Theme","Color","ThemeContext","createContext","themeStoreKey","ThemeContextProvider","children","useState","window","localStorage","getItem","Light","error","theme","setTheme","changeTheme","useCallback","setItem","Provider","value","currentTheme","useTheme","context","useContext","Error","Page","S","Container","t","styled","div","light","Grey50","dark","Black50","Black","White","ScrollToTop","history","useHistory","useEffect","listen","action","scrollTo","Navigation","className","to","href","onClick","Dark","Blue300","Blue200","Grey200","Orange100","Orange50","AnchorBlock","props","startsWith","as","Link","a","Github","path","this","axiosInstance","get","data","defaults","baseURL","ImageBlock","src","getContentURL","alt","axios","create","img","CodeBlock","language","replace","style","vscDarkPlus","TableBlock","table","Markdown","content","remarkPlugins","gfm","slug","components","code","useMarkdown","useSWR","getContent","dedupingInterval","shouldRetryOnError","location","hash","Main","Sub","useLocation","decodeURIComponent","pathname","main","GlobalStyle","createGlobalStyle","render","basename","process","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.938676f3.chunk.js","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\n\nexport enum Theme {\n  Light = \"light\",\n  Dark = \"dark\",\n}\n\ntype ThemeContextValue = {\n  currentTheme: Theme;\n  changeTheme(theme: Theme): void;\n};\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null);\n\nconst themeStoreKey = \"__CURRENT_THEME\";\n\nexport function ThemeContextProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    try {\n      return (window.localStorage.getItem(themeStoreKey) ??\n        Theme.Light) as Theme;\n    } catch (error) {\n      return Theme.Light;\n    }\n  });\n\n  const changeTheme = useCallback((theme: Theme) => {\n    setTheme(theme);\n\n    try {\n      window.localStorage.setItem(themeStoreKey, theme);\n    } catch (error) {}\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        currentTheme: theme,\n        changeTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"context must be provided before using\");\n  }\n  return context;\n}\n","export enum Color {\n  Blue300 = \"#58ACFA\",\n  Blue200 = \"#81BEF7\",\n  Blue100 = \"#A9D0F5\",\n  Purple300 = \"#8258FA\",\n  Purple200 = \"#9F81F7\",\n  Purple100 = \"#BCA9F5\",\n  White = \"#FFFFFF\",\n  Black50 = \"#585858\",\n  Black = \"#000000\",\n  Grey200 = \"#D8D8D8\",\n  Grey50 = \"#F2F2F2\",\n  Orange100 = \"#FFBF00\",\n  Orange50 = \"#F7D358\",\n}\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { Theme, useTheme } from \"../../contexts/Theme\";\n\nexport function Page({ children }: { children: ReactNode }) {\n  const { currentTheme } = useTheme();\n\n  return <S.Container t={currentTheme}>{children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    flex: 1;\n\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    background-color: ${({ t }) =>\n      ({ light: Color.Grey50, dark: Color.Black50 }[t])};\n\n    color: ${({ t }) => ({ light: Color.Black, dark: Color.White }[t])};\n  `,\n};\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport function ScrollToTop() {\n  const history = useHistory();\n\n  useEffect(() => {\n    return history.listen(() => {\n      if (history.action !== \"POP\") {\n        window.scrollTo(0, 0);\n      }\n    });\n  }, [history]);\n\n  return <></>;\n}\n","import styled from \"styled-components\";\n\nexport function NotFound() {\n  return (\n    <S.Container>\n      <p>NOT FOUND</p>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div`\n    position: fixed;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    width: 100%;\n    height: 100%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    > p {\n      font-size: 20px;\n    }\n  `,\n};\n","import { Link } from \"react-router-dom\";\nimport { AiFillHome, AiFillGithub } from \"react-icons/ai\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nexport const documentNavigationHeight = 60;\n\nexport function Navigation() {\n  const { currentTheme, changeTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <div className=\"links\">\n        <Link className=\"link\" to=\"/\">\n          <AiFillHome className=\"icon\" />\n        </Link>\n        <a className=\"link\" href=\"https://github.com/HoseungJang/wiki-front\">\n          <AiFillGithub className=\"icon\" />\n        </a>\n      </div>\n      <button\n        className=\"theme-change-button\"\n        onClick={() =>\n          changeTheme(\n            {\n              light: Theme.Dark,\n              dark: Theme.Light,\n            }[currentTheme]\n          )\n        }\n      >\n        {{\n          light: () => <FaSun className=\"icon\" />,\n          dark: () => <FaMoon className=\"icon\" />,\n        }[currentTheme]()}\n      </button>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    right: 0;\n\n    z-index: 1;\n\n    width: 100%;\n    height: ${documentNavigationHeight}px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 0 40px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }: { t: Theme }) =>\n      ({ light: Color.White, dark: Color.Black }[t])};\n\n    box-shadow: 1px 1px 10px\n      ${({ t }: { t: Theme }) =>\n        ({ light: Color.Grey50, dark: Color.Black50 }[t])};\n\n    > .links {\n      display: flex;\n\n      > .link {\n        width: 30px;\n        height: 30px;\n\n        &:not(:last-child) {\n          margin-right: 10px;\n        }\n\n        > .icon {\n          width: 100%;\n          height: 100%;\n\n          color: ${({ t }: { t: Theme }) =>\n            ({ light: Color.Blue300, dark: Color.White }[t])};\n\n          &:hover {\n            color: ${({ t }: { t: Theme }) =>\n              ({ light: Color.Blue200, dark: Color.Grey200 }[t])};\n          }\n        }\n      }\n    }\n\n    > .theme-change-button {\n      display: flex;\n\n      background-color: transparent;\n\n      border: none;\n\n      cursor: pointer;\n\n      > .icon {\n        width: 30px;\n        height: 30px;\n\n        color: ${({ t }: { t: Theme }) =>\n          ({ light: Color.Orange100, dark: Color.White }[t])};\n\n        &:hover {\n          color: ${({ t }: { t: Theme }) =>\n            ({ light: Color.Orange50, dark: Color.Grey200 }[t])};\n        }\n      }\n    }\n  `,\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nexport function AnchorBlock(props: any) {\n  return props.href.startsWith(\"#\") || props.href.startsWith(\"http\") ? (\n    <S.Container href={props.href}>{props.children}</S.Container>\n  ) : (\n    <S.Container as={Link} to={props.href}>\n      {props.children}\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.a`\n    font-weight: bold;\n    color: ${Color.Blue300};\n    text-decoration: none;\n\n    &:hover {\n      color: ${Color.Blue200};\n    }\n  `,\n};\n","import axios from \"axios\";\n\nexport class Github {\n  private static readonly axiosInstance = axios.create({\n    baseURL: \"https://raw.githubusercontent.com/HoseungJang/wiki/master\",\n  });\n\n  public static async getContent(path: string) {\n    return (await this.axiosInstance.get(path)).data as string;\n  }\n\n  public static getContentURL(path: string) {\n    return `${this.axiosInstance.defaults.baseURL}${path}`;\n  }\n}\n","import styled from \"styled-components\";\n\nimport { Github } from \"../../../services/github\";\n\nexport function ImageBlock(props: any) {\n  return <S.Container src={Github.getContentURL(props.src)} alt=\"\" />;\n}\n\nexport const S = {\n  Container: styled.img`\n    max-width: 100%;\n\n    object-fit: contain;\n  `,\n};\n","import { ReactNode } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nexport function CodeBlock({\n  className,\n  children,\n}: {\n  className?: string;\n  children: ReactNode;\n}) {\n  return (\n    <SyntaxHighlighter\n      language={className?.replace(\"language-\", \"\")}\n      style={vscDarkPlus}\n    >\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nimport { useTheme, Theme } from \"../../../contexts/Theme\";\n\nexport function TableBlock({ children }: { children: ReactNode }) {\n  const { currentTheme } = useTheme();\n\n  return <S.Container t={currentTheme}>{children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.table<{ t: Theme }>`\n    border-spacing: 0;\n\n    > thead {\n      > tr {\n        > th {\n          padding: 6px 13px;\n\n          box-sizing: border-box;\n\n          border: 1px solid\n            ${({ t }) => ({ light: Color.Grey200, dark: Color.Black50 }[t])};\n\n          &:not(:last-child) {\n            border-right: none;\n          }\n        }\n      }\n    }\n\n    > tbody {\n      > tr {\n        > td {\n          padding: 6px 13px;\n\n          box-sizing: border-box;\n\n          border: 1px solid\n            ${({ t }) => ({ light: Color.Grey200, dark: Color.Black50 }[t])};\n          border-top: none;\n\n          &:not(:last-child) {\n            border-right: none;\n          }\n        }\n      }\n    }\n  `,\n};\n","import ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport slug from \"remark-slug\";\n\nimport { AnchorBlock } from \"./renderers/AnchorBlock\";\nimport { ImageBlock } from \"./renderers/ImageBlock\";\nimport { CodeBlock } from \"./renderers/CodeBlock\";\nimport { TableBlock } from \"./renderers/TableBlock\";\n\nexport function Markdown({ content }: { content: string }) {\n  return (\n    <ReactMarkdown\n      remarkPlugins={[gfm, slug]}\n      components={{\n        a: AnchorBlock,\n        img: ImageBlock,\n        code: CodeBlock,\n        table: TableBlock,\n      }}\n    >\n      {content}\n    </ReactMarkdown>\n  );\n}\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport useSWR from \"swr\";\n\nimport { Github } from \"../services/github\";\n\nexport function useMarkdown(path: string) {\n  const history = useHistory();\n\n  const { data } = useSWR(\n    path,\n    async () => {\n      try {\n        return await Github.getContent(path);\n      } catch (error) {\n        history.replace(\"/not-found\");\n      }\n    },\n    { dedupingInterval: 3600 * 60, shouldRetryOnError: false }\n  );\n\n  useEffect(() => {\n    if (history.location.hash !== \"\" && data) {\n      window.location.hash = \"\";\n      window.location.hash = history.location.hash;\n    }\n  }, [history, data]);\n\n  return data ?? null;\n}\n","import styled from \"styled-components\";\n\nimport { Markdown } from \"../../components/Markdown\";\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nexport function Main() {\n  const content = useMarkdown(\"/README.md\");\n\n  return (\n    <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nimport { Markdown } from \"../../components/Markdown\";\n\nexport function Sub() {\n  const location = useLocation();\n\n  const content = useMarkdown(decodeURIComponent(location.pathname));\n\n  return (\n    <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nimport { Navigation, documentNavigationHeight } from \"./Navigation\";\nimport { Main } from \"./Main\";\nimport { Sub } from \"./Sub\";\n\nexport function Document() {\n  const { currentTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route component={Sub} />\n      </Switch>\n    </S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.main<{ t: Theme }>`\n    flex: 1;\n\n    position: relative;\n\n    width: 100%;\n    max-width: 800px;\n\n    display: flex;\n    flex-direction: column;\n\n    padding: ${documentNavigationHeight}px 40px 20px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }) =>\n      ({ light: Color.White, dark: Color.Black }[t])};\n\n    overflow-x: hidden;\n  `,\n};\n","import { render } from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { ThemeContextProvider } from \"./contexts/Theme\";\n\nimport { Page } from \"./components/Layout/Page\";\nimport { ScrollToTop } from \"./ScrollToTop\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { Document } from \"./pages/Document\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n\n    margin: 0;\n    padding: 0;\n\n    > #root {\n      width: 100%;\n      min-height: 100%;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      * {\n        transition: background-color 0.3s;\n      }\n    }\n  }\n`;\n\nrender(\n  <ThemeContextProvider>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <Page>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/not-found\" component={NotFound} />\n          <Route component={Document} />\n        </Switch>\n      </Page>\n    </BrowserRouter>\n  </ThemeContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}