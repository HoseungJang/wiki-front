{"version":3,"sources":["contexts/Theme.tsx","constants/color.ts","components/Layout/Page.tsx","pages/NotFound/index.tsx","pages/Document/Navigation.tsx","components/Markdown/renderers/AnchorBlock.tsx","components/Markdown/renderers/CodeBlock.tsx","components/Markdown/renderers/TableBlock.tsx","services/github.ts","components/Markdown/renderers/ImageBlock.tsx","components/Markdown/renderers/BlockquoteBlock.tsx","components/Markdown/renderers/UListBlock.tsx","components/Markdown/renderers/LIBlock.tsx","components/Markdown/index.tsx","hooks/useMarkdown.ts","pages/Document/Main.tsx","pages/Document/Sub.tsx","pages/Document/index.tsx","index.tsx"],"names":["Theme","Color","ThemeContext","createContext","themeStoreKey","ThemeContextProvider","children","useState","window","localStorage","getItem","Light","error","theme","setTheme","changeTheme","useCallback","setItem","Provider","value","currentTheme","useTheme","context","useContext","Error","Page","S","Container","t","styled","div","light","Grey50","dark","Black50","Black","Grey300","Navigation","className","to","href","onClick","Dark","White","Black200","Blue300","Blue200","Orange100","Orange50","AnchorBlock","props","startsWith","as","Link","a","CodeBlock","language","replace","style","vscDarkPlus","TableBlock","Grey200","Github","path","this","axiosInstance","get","data","defaults","baseURL","ImageBlock","src","getContentURL","alt","axios","create","img","BlockquoteBlock","blockquote","Grey100","UListBlock","ul","LIBlock","Markdown","content","remarkPlugins","gfm","slug","components","code","table","li","useMarkdown","history","useHistory","useSWR","getContent","dedupingInterval","shouldRetryOnError","useEffect","undefined","listen","targetElement","document","getElementById","decodeURIComponent","location","hash","slice","scrollTo","top","offsetTop","behavior","action","Main","Sub","useLocation","pathname","main","Black100","GlobalStyle","createGlobalStyle","render","exact","component"],"mappings":"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","file":"static/js/main.799fcdb2.chunk.js","sourcesContent":["import { createContext, ReactNode, useCallback, useContext, useState } from \"react\";\n\nexport enum Theme {\n  Light = \"light\",\n  Dark = \"dark\",\n}\n\ntype ThemeContextValue = {\n  currentTheme: Theme;\n  changeTheme(theme: Theme): void;\n};\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null);\n\nconst themeStoreKey = \"__CURRENT_THEME\";\n\nexport function ThemeContextProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    try {\n      return (window.localStorage.getItem(themeStoreKey) ?? Theme.Light) as Theme;\n    } catch (error) {\n      return Theme.Light;\n    }\n  });\n\n  const changeTheme = useCallback((theme: Theme) => {\n    setTheme(theme);\n\n    try {\n      window.localStorage.setItem(themeStoreKey, theme);\n    } catch (error) {}\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        currentTheme: theme,\n        changeTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"context must be provided before using\");\n  }\n  return context;\n}\n","export enum Color {\n  Blue300 = \"#58ACFA\",\n  Blue200 = \"#81BEF7\",\n  Blue100 = \"#A9D0F5\",\n  Purple300 = \"#8258FA\",\n  Purple200 = \"#9F81F7\",\n  Purple100 = \"#BCA9F5\",\n  White = \"#FFFFFF\",\n  Black50 = \"#585858\",\n  Black100 = \"#222222\",\n  Black200 = \"#1A1A1A\",\n  Black = \"#000000\",\n  Grey300 = \"#CACACA\",\n  Grey200 = \"#D8D8D8\",\n  Grey100 = \"#E6E6E6\",\n  Grey50 = \"#F2F2F2\",\n  Orange100 = \"#FFBF00\",\n  Orange50 = \"#F7D358\",\n}\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { Theme, useTheme } from \"../../contexts/Theme\";\n\nexport function Page({ children }: { children: ReactNode }) {\n  const { currentTheme } = useTheme();\n\n  return <S.Container t={currentTheme}>{children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    flex: 1;\n\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    background-color: ${({ t }) => ({ light: Color.Grey50, dark: Color.Black50 }[t])};\n\n    color: ${({ t }) => ({ light: Color.Black, dark: Color.Grey300 }[t])};\n  `,\n};\n","import styled from \"styled-components\";\n\nexport function NotFound() {\n  return (\n    <S.Container>\n      <p>NOT FOUND</p>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div`\n    position: fixed;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    width: 100%;\n    height: 100%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    > p {\n      font-size: 20px;\n    }\n  `,\n};\n","import { Link } from \"react-router-dom\";\nimport { AiFillHome, AiFillGithub } from \"react-icons/ai\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nexport const documentNavigationHeight = 60;\n\nexport function Navigation() {\n  const { currentTheme, changeTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <div className=\"links\">\n        <Link className=\"link\" to=\"/\">\n          <AiFillHome className=\"icon\" />\n        </Link>\n        <a className=\"link\" href=\"https://github.com/HoseungJang/wiki-front\">\n          <AiFillGithub className=\"icon\" />\n        </a>\n      </div>\n      <button\n        className=\"theme-change-button\"\n        onClick={() =>\n          changeTheme(\n            {\n              light: Theme.Dark,\n              dark: Theme.Light,\n            }[currentTheme]\n          )\n        }\n      >\n        {{\n          light: () => <FaSun className=\"icon\" />,\n          dark: () => <FaMoon className=\"icon\" />,\n        }[currentTheme]()}\n      </button>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    position: fixed;\n\n    top: 0;\n    left: auto;\n    right: auto;\n\n    z-index: 1;\n\n    width: 100%;\n    max-width: 800px;\n    height: ${documentNavigationHeight}px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 0 40px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }: { t: Theme }) => ({ light: Color.White, dark: Color.Black200 }[t])};\n\n    border-bottom: 1px solid ${({ t }: { t: Theme }) => ({ light: Color.Grey50, dark: Color.Black200 }[t])};\n\n    > .links {\n      display: flex;\n\n      > .link {\n        width: 30px;\n        height: 30px;\n\n        &:not(:last-child) {\n          margin-right: 10px;\n        }\n\n        > .icon {\n          width: 100%;\n          height: 100%;\n\n          color: ${({ t }: { t: Theme }) => ({ light: Color.Blue300, dark: Color.Grey300 }[t])};\n\n          &:hover {\n            color: ${({ t }: { t: Theme }) => ({ light: Color.Blue200, dark: Color.Grey50 }[t])};\n          }\n        }\n      }\n    }\n\n    > .theme-change-button {\n      display: flex;\n\n      background-color: transparent;\n\n      border: none;\n\n      cursor: pointer;\n\n      > .icon {\n        width: 30px;\n        height: 30px;\n\n        color: ${({ t }: { t: Theme }) => ({ light: Color.Orange100, dark: Color.Grey300 }[t])};\n\n        &:hover {\n          color: ${({ t }: { t: Theme }) => ({ light: Color.Orange50, dark: Color.Grey50 }[t])};\n        }\n      }\n    }\n  `,\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nexport function AnchorBlock(props: any) {\n  return props.href.startsWith(\"#\") || props.href.startsWith(\"http\") ? (\n    <S.Container href={props.href}>{props.children}</S.Container>\n  ) : (\n    <S.Container as={Link} to={props.href}>\n      {props.children}\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.a`\n    font-weight: bold;\n    color: ${Color.Blue300};\n    text-decoration: none;\n\n    &:hover {\n      color: ${Color.Blue200};\n    }\n  `,\n};\n","import { ReactNode } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport { vscDarkPlus } from \"react-syntax-highlighter/dist/esm/styles/prism\";\n\nexport function CodeBlock({ className, children }: { className?: string; children: ReactNode }) {\n  return (\n    <SyntaxHighlighter language={className?.replace(\"language-\", \"\")} style={vscDarkPlus}>\n      {children}\n    </SyntaxHighlighter>\n  );\n}\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nimport { useTheme, Theme } from \"../../../contexts/Theme\";\n\nexport function TableBlock({ children }: { children: ReactNode }) {\n  const { currentTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <table>{children}</table>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    width: 100%;\n\n    word-break: keep-all;\n\n    overflow-x: scroll;\n\n    > table {\n      width: fit-content;\n\n      border-spacing: 0;\n\n      > thead {\n        > tr {\n          > th {\n            padding: 6px 13px;\n\n            box-sizing: border-box;\n\n            border: 1px solid ${({ t }) => ({ light: Color.Grey200, dark: Color.Black50 }[t])};\n\n            &:not(:last-child) {\n              border-right: none;\n            }\n          }\n        }\n      }\n\n      > tbody {\n        > tr {\n          > td {\n            padding: 6px 13px;\n\n            box-sizing: border-box;\n\n            border: 1px solid ${({ t }) => ({ light: Color.Grey200, dark: Color.Black50 }[t])};\n            border-top: none;\n\n            &:not(:last-child) {\n              border-right: none;\n            }\n          }\n        }\n      }\n    }\n  `,\n};\n","import axios from \"axios\";\n\nexport class Github {\n  private static readonly axiosInstance = axios.create({\n    baseURL: \"https://raw.githubusercontent.com/HoseungJang/wiki/master\",\n  });\n\n  public static async getContent(path: string) {\n    return (await this.axiosInstance.get(path)).data as string;\n  }\n\n  public static getContentURL(path: string) {\n    return `${this.axiosInstance.defaults.baseURL}${path}`;\n  }\n}\n","import styled from \"styled-components\";\n\nimport { Github } from \"../../../services/github\";\n\nexport function ImageBlock(props: any) {\n  return <S.Container src={Github.getContentURL(props.src)} alt=\"\" />;\n}\n\nconst S = {\n  Container: styled.img`\n    max-width: 100%;\n\n    display: block;\n\n    margin: 0 auto;\n\n    object-fit: contain;\n  `,\n};\n","import styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nimport { useTheme, Theme } from \"../../../contexts/Theme\";\n\nexport function BlockquoteBlock(props: any) {\n  const { currentTheme } = useTheme();\n\n  return <S.Container t={currentTheme}>{props.children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.blockquote<{ t: Theme }>`\n    width: 100%;\n\n    padding: 0 20px;\n    margin: 0;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }) => ({ light: Color.Grey100, dark: Color.Black50 }[t])};\n  `,\n};\n","import styled from \"styled-components\";\n\nexport function UListBlock(props: any) {\n  return <S.Container>{props.children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.ul`\n    padding-left: 22px;\n    margin: 18px 0;\n\n    list-style: disc;\n  `,\n};\n","import styled from \"styled-components\";\n\nexport function LIBlock(props: any) {\n  return <S.Container>{props.children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.ul`\n    display: list-item;\n\n    list-style: disc;\n\n    &:not(:last-child) {\n      margin-bottom: 8px;\n    }\n  `,\n};\n","import ReactMarkdown from \"react-markdown\";\nimport gfm from \"remark-gfm\";\nimport slug from \"remark-slug\";\nimport styled from \"styled-components\";\n\nimport { AnchorBlock } from \"./renderers/AnchorBlock\";\nimport { CodeBlock } from \"./renderers/CodeBlock\";\nimport { TableBlock } from \"./renderers/TableBlock\";\nimport { ImageBlock } from \"./renderers/ImageBlock\";\nimport { BlockquoteBlock } from \"./renderers/BlockquoteBlock\";\nimport { UListBlock } from \"./renderers/UListBlock\";\nimport { LIBlock } from \"./renderers/LIBlock\";\n\nexport function Markdown({ content }: { content: string }) {\n  return (\n    <S.Container>\n      <ReactMarkdown\n        remarkPlugins={[gfm, slug]}\n        components={{\n          a: AnchorBlock,\n          code: CodeBlock,\n          table: TableBlock,\n          img: ImageBlock,\n          blockquote: BlockquoteBlock,\n          ul: UListBlock,\n          li: LIBlock,\n        }}\n      >\n        {content}\n      </ReactMarkdown>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div`\n    display: flex;\n    flex-direction: column;\n\n    font-size: 1.8rem;\n    word-break: break-all;\n  `,\n};\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport useSWR from \"swr\";\n\nimport { Github } from \"../services/github\";\n\nimport { documentNavigationHeight } from \"../pages/Document/Navigation\";\n\nexport function useMarkdown(path: string) {\n  const history = useHistory();\n\n  const { data } = useSWR(\n    path,\n    async () => {\n      try {\n        return await Github.getContent(path);\n      } catch (error) {\n        history.replace(\"/not-found\");\n      }\n    },\n    { dedupingInterval: 3600 * 60, shouldRetryOnError: false }\n  );\n\n  useEffect(() => {\n    if (data !== undefined) {\n      return history.listen(() => {\n        const targetElement = document.getElementById(decodeURIComponent(history.location.hash.slice(1)));\n\n        if (targetElement) {\n          window.scrollTo({ top: targetElement.offsetTop - documentNavigationHeight, behavior: \"smooth\" });\n        } else if (history.action !== \"POP\") {\n          window.scrollTo({ top: 0, behavior: \"auto\" });\n        }\n      });\n    }\n  }, [data, history]);\n\n  return data ?? null;\n}\n","import styled from \"styled-components\";\n\nimport { Markdown } from \"../../components/Markdown\";\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nexport function Main() {\n  const content = useMarkdown(\"/README.md\");\n\n  return <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>;\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nimport { Markdown } from \"../../components/Markdown\";\n\nexport function Sub() {\n  const location = useLocation();\n\n  const content = useMarkdown(decodeURIComponent(location.pathname));\n\n  return <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>;\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nimport { Navigation, documentNavigationHeight } from \"./Navigation\";\nimport { Main } from \"./Main\";\nimport { Sub } from \"./Sub\";\n\nexport function Document() {\n  const { currentTheme } = useTheme();\n\n  return (\n    <>\n      <Navigation />\n      <S.Container t={currentTheme}>\n        <Switch>\n          <Route exact path=\"/\" component={Main} />\n          <Route component={Sub} />\n        </Switch>\n      </S.Container>\n    </>\n  );\n}\n\nexport const S = {\n  Container: styled.main<{ t: Theme }>`\n    flex: 1;\n\n    position: relative;\n\n    width: 100%;\n    max-width: 800px;\n\n    display: flex;\n    flex-direction: column;\n\n    padding: ${documentNavigationHeight}px 40px 20px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }) => ({ light: Color.White, dark: Color.Black100 }[t])};\n\n    overflow-x: hidden;\n\n    @media screen and (max-width: 768px) {\n      padding: ${documentNavigationHeight}px 20px 20px;\n    }\n  `,\n};\n","import { render } from \"react-dom\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { ThemeContextProvider } from \"./contexts/Theme\";\n\nimport { Page } from \"./components/Layout/Page\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { Document } from \"./pages/Document\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n\n    margin: 0;\n    padding: 0;\n\n    font-size: 10px;\n    font-family: 'NEXON Lv2 Gothic';\n    line-height: 1.4;\n\n    @font-face {\n      font-family: 'NEXON Lv2 Gothic';\n      src: url('https://cdn.jsdelivr.net/gh/projectnoonnu/noonfonts_20-04@2.1/NEXON Lv2 Gothic.woff') format('woff');\n      font-weight: normal;\n      font-style: normal;\n    }\n\n    ul {\n      margin: 0;\n      padding: 0;\n  \n      list-style: none;\n    }\n\n    > #root {\n      width: 100%;\n      min-height: 100%;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      * {\n        transition: background-color 0.3s;\n      }\n    }\n\n    @media screen and (max-width: 768px) {\n      font-size: 8px;\n    }\n  }\n`;\n\nrender(\n  <ThemeContextProvider>\n    <HashRouter>\n      <GlobalStyle />\n      <Page>\n        <Switch>\n          <Route exact path=\"/not-found\" component={NotFound} />\n          <Route component={Document} />\n        </Switch>\n      </Page>\n    </HashRouter>\n  </ThemeContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}