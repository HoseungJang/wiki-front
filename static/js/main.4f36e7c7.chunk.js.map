{"version":3,"sources":["contexts/Theme.tsx","constants/color.ts","components/Layout/Page.tsx","ScrollToTop.tsx","pages/NotFound/index.tsx","pages/Document/Navigation.tsx","components/Markdown/renderers/HeadingBlock.tsx","components/Markdown/renderers/AnchorBlock.tsx","components/Markdown/index.tsx","services/github.ts","hooks/useMarkdown.ts","pages/Document/Main.tsx","pages/Document/Sub.tsx","pages/Document/index.tsx","index.tsx"],"names":["Theme","Color","ThemeContext","createContext","themeStoreKey","ThemeContextProvider","children","useState","window","localStorage","getItem","Light","error","theme","setTheme","changeTheme","useCallback","setItem","Provider","value","currentTheme","useTheme","context","useContext","Error","Page","S","Container","t","styled","div","light","Grey50","dark","Black50","Black","White","ScrollToTop","history","useHistory","useEffect","listen","action","scrollTo","Navigation","className","to","onClick","Dark","Blue300","Blue200","Grey200","Orange100","Orange50","HeadingBlock","level","id","replace","createElement","AnchorBlock","props","href","startsWith","Hash","Path","Link","a","Purple300","Purple200","Markdown","content","components","h1","h2","h3","h4","Github","path","this","instance","get","data","useMarkdown","useSWR","getContent","shouldRetryOnError","Main","axios","create","baseURL","Sub","location","useLocation","decodeURIComponent","pathname","main","GlobalStyle","createGlobalStyle","render","basename","process","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.4f36e7c7.chunk.js","sourcesContent":["import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useState,\n} from \"react\";\n\nexport enum Theme {\n  Light = \"light\",\n  Dark = \"dark\",\n}\n\ntype ThemeContextValue = {\n  currentTheme: Theme;\n  changeTheme(theme: Theme): void;\n};\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null);\n\nconst themeStoreKey = \"__CURRENT_THEME\";\n\nexport function ThemeContextProvider({ children }: { children: ReactNode }) {\n  const [theme, setTheme] = useState<Theme>(() => {\n    try {\n      return (window.localStorage.getItem(themeStoreKey) ??\n        Theme.Light) as Theme;\n    } catch (error) {\n      return Theme.Light;\n    }\n  });\n\n  const changeTheme = useCallback((theme: Theme) => {\n    setTheme(theme);\n\n    try {\n      window.localStorage.setItem(themeStoreKey, theme);\n    } catch (error) {}\n  }, []);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        currentTheme: theme,\n        changeTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error(\"context must be provided before using\");\n  }\n  return context;\n}\n","export enum Color {\n  Blue300 = \"#58ACFA\",\n  Blue200 = \"#81BEF7\",\n  Blue100 = \"#A9D0F5\",\n  Purple300 = \"#8258FA\",\n  Purple200 = \"#9F81F7\",\n  Purple100 = \"#BCA9F5\",\n  White = \"#FFFFFF\",\n  Black50 = \"#585858\",\n  Black = \"#000000\",\n  Grey200 = \"#D8D8D8\",\n  Grey50 = \"#F2F2F2\",\n  Orange100 = \"#FFBF00\",\n  Orange50 = \"#F7D358\",\n}\n","import { ReactNode } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { Theme, useTheme } from \"../../contexts/Theme\";\n\nexport function Page({ children }: { children: ReactNode }) {\n  const { currentTheme } = useTheme();\n\n  return <S.Container t={currentTheme}>{children}</S.Container>;\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    width: 100%;\n    height: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    background-color: ${({ t }) =>\n      ({ light: Color.Grey50, dark: Color.Black50 }[t])};\n\n    color: ${({ t }) => ({ light: Color.Black, dark: Color.White }[t])};\n  `,\n};\n","import { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\n\nexport function ScrollToTop() {\n  const history = useHistory();\n\n  useEffect(() => {\n    return history.listen(() => {\n      if (history.action !== \"POP\") {\n        window.scrollTo(0, 0);\n      }\n    });\n  }, [history]);\n\n  return <></>;\n}\n","import styled from \"styled-components\";\n\nexport function NotFound() {\n  return (\n    <S.Container>\n      <p>NOT FOUND</p>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div`\n    position: fixed;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    width: 100%;\n    height: 100%;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    > p {\n      font-size: 20px;\n    }\n  `,\n};\n","import { Link } from \"react-router-dom\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { FaSun, FaMoon } from \"react-icons/fa\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nexport const documentNavigationHeight = 60;\n\nexport function Navigation() {\n  const { currentTheme, changeTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <div className=\"links\">\n        <Link className=\"link\" to=\"/\">\n          <AiFillHome className=\"icon\" />\n        </Link>\n      </div>\n      <button\n        className=\"theme-change-button\"\n        onClick={() =>\n          changeTheme(\n            {\n              light: Theme.Dark,\n              dark: Theme.Light,\n            }[currentTheme]\n          )\n        }\n      >\n        {{\n          light: () => <FaSun className=\"icon\" />,\n          dark: () => <FaMoon className=\"icon\" />,\n        }[currentTheme]()}\n      </button>\n    </S.Container>\n  );\n}\n\nconst S = {\n  Container: styled.div<{ t: Theme }>`\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    right: 0;\n\n    z-index: 1;\n\n    width: 100%;\n    height: ${documentNavigationHeight}px;\n\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    padding: 0 40px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }: { t: Theme }) =>\n      ({ light: Color.White, dark: Color.Black }[t])};\n\n    box-shadow: 1px 1px 10px\n      ${({ t }: { t: Theme }) =>\n        ({ light: Color.Grey50, dark: Color.Black50 }[t])};\n\n    > .links {\n      display: flex;\n\n      > .link {\n        width: 30px;\n        height: 30px;\n\n        > .icon {\n          width: 100%;\n          height: 100%;\n\n          color: ${({ t }: { t: Theme }) =>\n            ({ light: Color.Blue300, dark: Color.White }[t])};\n\n          &:hover {\n            color: ${({ t }: { t: Theme }) =>\n              ({ light: Color.Blue200, dark: Color.Grey200 }[t])};\n          }\n        }\n      }\n    }\n\n    > .theme-change-button {\n      display: flex;\n\n      background-color: transparent;\n\n      border: none;\n\n      cursor: pointer;\n\n      > .icon {\n        width: 30px;\n        height: 30px;\n\n        color: ${({ t }: { t: Theme }) =>\n          ({ light: Color.Orange100, dark: Color.White }[t])};\n\n        &:hover {\n          color: ${({ t }: { t: Theme }) =>\n            ({ light: Color.Orange50, dark: Color.Grey200 }[t])};\n        }\n      }\n    }\n  `,\n};\n","import { createElement } from \"react\";\n\nexport function HeadingBlock({\n  level,\n  children,\n}: {\n  level: number;\n  children: any;\n}) {\n  const id = (children[0] as string).replace(/\\?/g, \"\").replace(/ /g, \"-\");\n  return createElement(`h${level}`, { id }, children);\n}\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../../constants/color\";\n\nexport function AnchorBlock(props: any) {\n  return props.href.startsWith(\"#\") ? (\n    <S.Hash href={props.href}>{props.children}</S.Hash>\n  ) : (\n    <S.Path to={props.href}>{props.children}</S.Path>\n  );\n}\n\nconst S = {\n  Path: styled(Link)`\n    font-weight: bold;\n    color: ${Color.Blue300};\n    text-decoration: none;\n\n    &:hover {\n      color: ${Color.Blue200};\n    }\n  `,\n  Hash: styled.a`\n    font-weight: bold;\n    color: ${Color.Purple300};\n    text-decoration: none;\n\n    &:hover {\n      color: ${Color.Purple200};\n    }\n  `,\n};\n","import ReactMarkdown from \"react-markdown\";\n\nimport { HeadingBlock } from \"./renderers/HeadingBlock\";\nimport { AnchorBlock } from \"./renderers/AnchorBlock\";\n\nexport function Markdown({ content }: { content: string }) {\n  return (\n    <ReactMarkdown\n      components={{\n        h1: HeadingBlock,\n        h2: HeadingBlock,\n        h3: HeadingBlock,\n        h4: HeadingBlock,\n        a: AnchorBlock,\n      }}\n    >\n      {content}\n    </ReactMarkdown>\n  );\n}\n","import axios from \"axios\";\n\nexport class Github {\n  private static readonly instance = axios.create({\n    baseURL: \"https://raw.githubusercontent.com/HoseungJang/wiki-base/master\",\n  });\n\n  public static async getContent(path: string) {\n    return (await this.instance.get(path)).data;\n  }\n}\n","import { useHistory } from \"react-router\";\nimport useSWR from \"swr\";\n\nimport { Github } from \"../services/github\";\n\nexport function useMarkdown(path: string) {\n  const history = useHistory();\n\n  const { data } = useSWR(\n    path,\n    async () => {\n      try {\n        return await Github.getContent(path);\n      } catch (error) {\n        history.replace(\"/not-found\");\n      }\n    },\n    { shouldRetryOnError: false }\n  );\n\n  return data ?? null;\n}\n","import styled from \"styled-components\";\n\nimport { Markdown } from \"../../components/Markdown\";\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nexport function Main() {\n  const content = useMarkdown(\"/README.md\");\n\n  return (\n    <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { useLocation } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport { useMarkdown } from \"../../hooks/useMarkdown\";\n\nimport { Markdown } from \"../../components/Markdown\";\n\nexport function Sub() {\n  const location = useLocation();\n\n  const content = useMarkdown(decodeURIComponent(location.pathname));\n\n  return (\n    <S.Container>{content ? <Markdown content={content} /> : null}</S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.div``,\n};\n","import { Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Color } from \"../../constants/color\";\n\nimport { useTheme, Theme } from \"../../contexts/Theme\";\n\nimport { Navigation, documentNavigationHeight } from \"./Navigation\";\nimport { Main } from \"./Main\";\nimport { Sub } from \"./Sub\";\n\nexport function Document() {\n  const { currentTheme } = useTheme();\n\n  return (\n    <S.Container t={currentTheme}>\n      <Navigation />\n      <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route component={Sub} />\n      </Switch>\n    </S.Container>\n  );\n}\n\nexport const S = {\n  Container: styled.main<{ t: Theme }>`\n    flex: 1;\n\n    position: relative;\n\n    width: 100%;\n    max-width: 800px;\n\n    display: flex;\n    flex-direction: column;\n\n    padding: ${documentNavigationHeight}px 40px 20px;\n\n    box-sizing: border-box;\n\n    background-color: ${({ t }) =>\n      ({ light: Color.White, dark: Color.Black }[t])};\n\n    overflow-x: hidden;\n  `,\n};\n","import { render } from \"react-dom\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n\nimport { ThemeContextProvider } from \"./contexts/Theme\";\n\nimport { Page } from \"./components/Layout/Page\";\nimport { ScrollToTop } from \"./ScrollToTop\";\nimport { NotFound } from \"./pages/NotFound\";\nimport { Document } from \"./pages/Document\";\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    width: 100%;\n    height: 100%;\n\n    margin: 0;\n    padding: 0;\n\n    > #root {\n      width: 100%;\n      height: 100%;\n\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n\n      * {\n        transition: background-color 0.3s;\n      }\n    }\n  }\n`;\n\nrender(\n  <ThemeContextProvider>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <GlobalStyle />\n      <Page>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/not-found\" component={NotFound} />\n          <Route component={Document} />\n        </Switch>\n      </Page>\n    </BrowserRouter>\n  </ThemeContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}